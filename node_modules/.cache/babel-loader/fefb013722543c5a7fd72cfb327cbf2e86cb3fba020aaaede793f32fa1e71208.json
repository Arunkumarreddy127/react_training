{"ast":null,"code":"var _jsxFileName = \"/Users/arunkumarreddychittem/AEM/React/react_training/training_react/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// initial template code.\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// class App1 extends React.Component{\n//   render() {\n//     return(\n//       <div>\n//         <Header username=\"Arun\" date=\"30-Apr-2024\"/>\n//         <p>Shopping website Main body</p>\n//         <Footer sitename=\"ecommerce\"/>\n//       </div>\n//     )\n//   }\n// }\n\n// class Header extends React.Component{\n//   render() {\n//     return(\n//       <div>\n//         <p>header <strong>{this.props.username}</strong> </p>\n//         <p>header <strong>{this.props.date}</strong> </p>\n//       </div>\n\n//     )\n//   }\n// }\n\n// class Footer extends React.Component{\n//   render() {\n//     return(\n//       <div>\n//         <p>footer <strong>{this.props.sitename} </strong></p>\n//       </div>\n//     )\n//   }\n// }\n\n//shouldComponentUpdate()\n// class Music extends React.Component {\n\n//   constructor(props) {\n//       super(props);\n//       this.state = {\n//         instrument: \"Guitar\"\n//       }\n//   }\n\n//   shouldComponentUpdate() {\n\n//     return true;\n//   }\n\n//   change = () => {\n//     this.setState({\n//       instrument: \"Drums\"\n//     })\n//   }\n\n//   getSnapshotBeforeUpdate(prP, prS) {\n//     alert('before: '+prS.instrument);\n//   }\n\n//   componentDidUpdate() {\n//     alert('after: '+ this.state.instrument)\n//   }\n\n//   render() {\n//   return ( \n//     <div>\n//       <p>This is music instrument <strong>{this.state.instrument}</strong></p>\n//       <button type=\"button\" onClick={this.change}>Update</button>\n//       </div>\n//    );\n//   }\n// }\n\n// export default Music;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [age, setAge] = useState(34);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The age is: age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAge(age + 1),\n      children: \"Increase age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ye46O/lXV7pyK2Tiq6ZJvFo8p5Q=\");\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 108,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","App","_s","age","setAge","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","render","document","getElementById","$RefreshReg$"],"sources":["/Users/arunkumarreddychittem/AEM/React/react_training/training_react/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// initial template code.\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n// class App1 extends React.Component{\n//   render() {\n//     return(\n//       <div>\n//         <Header username=\"Arun\" date=\"30-Apr-2024\"/>\n//         <p>Shopping website Main body</p>\n//         <Footer sitename=\"ecommerce\"/>\n//       </div>\n//     )\n//   }\n// }\n\n// class Header extends React.Component{\n//   render() {\n//     return(\n//       <div>\n//         <p>header <strong>{this.props.username}</strong> </p>\n//         <p>header <strong>{this.props.date}</strong> </p>\n//       </div>\n      \n//     )\n//   }\n// }\n\n// class Footer extends React.Component{\n//   render() {\n//     return(\n//       <div>\n//         <p>footer <strong>{this.props.sitename} </strong></p>\n//       </div>\n//     )\n//   }\n// }\n\n//shouldComponentUpdate()\n// class Music extends React.Component {\n\n//   constructor(props) {\n//       super(props);\n//       this.state = {\n//         instrument: \"Guitar\"\n//       }\n//   }\n\n//   shouldComponentUpdate() {\n\n//     return true;\n//   }\n\n//   change = () => {\n//     this.setState({\n//       instrument: \"Drums\"\n//     })\n//   }\n\n//   getSnapshotBeforeUpdate(prP, prS) {\n//     alert('before: '+prS.instrument);\n//   }\n\n//   componentDidUpdate() {\n//     alert('after: '+ this.state.instrument)\n//   }\n  \n//   render() {\n//   return ( \n//     <div>\n//       <p>This is music instrument <strong>{this.state.instrument}</strong></p>\n//       <button type=\"button\" onClick={this.change}>Update</button>\n//       </div>\n//    );\n//   }\n// }\n\n// export default Music;\n\nfunction App() {\n  const[age, setAge] = useState(34);\n\n  return(\n    <div>\n      <p>The age is: age</p>\n      <button onClick={() => setAge(age+1)}>Increase age</button>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEjC,oBACEG,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtBT,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAMN,MAAM,CAACD,GAAG,GAAC,CAAC,CAAE;MAAAE,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACP,EAAA,CATQD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AAWZH,QAAQ,CAACc,MAAM,eAACZ,OAAA,CAACC,GAAG;EAAAK,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEI,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}